class Solution {
    public:
        int threeSumClosest(vector<int>& nums, int target) {
            sort(nums.begin(),nums.end());
            int res=nums[0]+nums[1]+nums[2];
            for(int i=0;i<nums.size();i++)
            {
                for(int j=i+1;j<nums.size()-1;j++)
                {
                    int tar=target-nums[i]-nums[j];
                    int l=j+1,r=nums.size()-1;
                    int m=(l+r)>>1;
                    while(l<r)
                    {
                        m=(l+r)>>1;
                        if(nums[m]==tar) return target;
                        else if(nums[m]>tar) r=m-1;
                        else l=m+1;
                    }
                    int third=m;
                    if(m-1>j)
                    {
                        if(abs(tar-nums[third])>abs(tar-nums[m-1])) third=m-1;
                    }
                    if(m+1<nums.size())
                    {
                        if(abs(tar-nums[third])>abs(tar-nums[m+1])) third=m+1;
                    }
                    int sum=nums[i]+nums[j]+nums[third];
                    if(abs(target-sum)<abs(target-res)) res=sum;
                    while(j+1<nums.size()&&nums[j]==nums[j+1]) j++;
                }
                while(i+1<nums.size()&&nums[i]==nums[i+1]) i++;
            }
            return res;
        }
};
